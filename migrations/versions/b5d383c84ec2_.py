"""Cleaning up the address table, adding a unique contraint.

Revision ID: b5d383c84ec2
Revises: 2fac2aa8b798
Create Date: 2022-11-19 19:36:40.852008

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b5d383c84ec2'
down_revision = '2fac2aa8b798'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    tables_depending_on_addresses = {
        'distance_matrix': ['origin_id', 'destination_id'],
        'generated_carpool_parts': ['from_address_id', 'to_address_id'],
        'generated_carpools': ['from_address_id', 'to_address_id'],
        'destinations': ['address_id'],
        'address_user_links': ['address_id'],
    }

    op.execute("""
    UPDATE addresses
    SET code= NULL
    WHERE code='0';
    """)

    for table, columns in tables_depending_on_addresses.items():
        for column in columns:
            # getting general latlng done
            op.execute(f"""
            UPDATE {table}
            SET {column} = t2.id
            FROM
            (
            SELECT min(addresses.id) AS id, min(latitude) AS latitude, min(longitude) AS longitude
                    FROM addresses
                    GROUP BY addresses.latitude, addresses.longitude, address_line_1) AS t2
            INNER JOIN addresses ON addresses.latitude = t2.latitude AND addresses.longitude = t2.longitude
            WHERE {table}.{column} = addresses.id
            """)

            # asking if theres a duplicate with latlng
    op.execute("""
    DELETE FROM addresses
    WHERE id NOT IN (SELECT min(addresses.id) AS id
                    FROM addresses
                    GROUP BY addresses.latitude, addresses.longitude, address_line_1)
    """)
     # its null and its a duplicate
    


    # all for this line: :( -- making sure that each address is unique
    op.create_unique_constraint(None, 'addresses', ['code'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    #op.drop_constraint(None, 'addresses', type_='unique')
    # ### end Alembic commands ###
